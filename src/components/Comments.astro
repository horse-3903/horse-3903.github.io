---
const { pageTitle, pageUrl, pageId, appId } = Astro.props;
---

<section id="comments" class="mt-12">
  <div
    id="cusdis_thread"
    data-host="https://cusdis.com"
    data-app-id={appId}
    data-page-id={pageId}
    data-page-url={pageUrl}
    data-page-title={pageTitle}>
  </div>
  <script async defer src="https://cusdis.com/js/cusdis.es.js"></script>
</section>

<script is:inline>
  if (typeof window !== 'undefined') {
    const cusdis = document.getElementById('cusdis_thread');
    if (cusdis) {
      const observer = new IntersectionObserver(
        (entries) => {
          for (const entry of entries) {
            if (entry.isIntersecting) {
              cusdis.classList.add('visible');
              observer.unobserve(cusdis);
            }
          }
        },
        { threshold: 0.15 }
      );
      observer.observe(cusdis);
    }

    function updateCusdisTheme() {
      const iframe = document.querySelector('#cusdis_thread iframe');
      if (!iframe || !iframe.contentWindow) return;
      const theme = document.documentElement.classList.contains('dark') ? 'dark' : 'light';
      iframe.contentWindow.postMessage({ from: 'cusdis', event: 'setTheme', theme }, '*');
    }

    const themeObserver = new MutationObserver(updateCusdisTheme);
    themeObserver.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });

    window.addEventListener('message', (event) => {
      if (event.data?.from === 'cusdis' && event.data.event === 'onReady') {
        updateCusdisTheme();
      }
    });
  }
</script>
